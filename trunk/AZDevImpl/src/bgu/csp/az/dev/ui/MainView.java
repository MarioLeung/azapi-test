/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWindow.java
 *
 * Created on 15/08/2011, 08:23:23
 */
package bgu.csp.az.dev.ui;

import bam.utils.ui.mvc.pages.Page;
import bam.utils.ui.mvc.pages.PageContainerModel;
import java.util.HashMap;
import javax.swing.BoundedRangeModel;
import javax.swing.UIManager;

/**
 *
 * @author bennyl
 */
public class MainView extends javax.swing.JFrame implements PageContainerModel.Listener{

    PageContainerModel model;

    /** Creates new form MainWindow */
    public MainView() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public void setModel(PageContainerModel model) {
        this.model = model;
        model.addListener(this);
    }

    public void setModel(BoundedRangeModel model){
        progress.setModel(model);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pinstripePainter1 = new org.jdesktop.swingx.painter.PinstripePainter();
        backPan = new org.jdesktop.swingx.JXPanel();
        contentPan = new org.jdesktop.swingx.JXPanel();
        topPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        statusBarPan = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        progress = new javax.swing.JProgressBar();

        pinstripePainter1.setCacheable(true);
        pinstripePainter1.setSpacing(3.0);
        pinstripePainter1.setStripeWidth(0.0);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agent Zero");

        backPan.setBackgroundPainter(pinstripePainter1);
        backPan.setPreferredSize(new java.awt.Dimension(900, 500));
        backPan.setLayout(new java.awt.GridBagLayout());

        contentPan.setBackground(new java.awt.Color(255, 255, 255));
        contentPan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        contentPan.setLayout(new java.awt.GridBagLayout());

        topPanel.setBackground(new java.awt.Color(255, 255, 255));
        topPanel.setPreferredSize(new java.awt.Dimension(100, 50));
        topPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Nyala", 0, 24));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/logo32.png"))); // NOI18N
        jLabel1.setText("Agent Zero");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        topPanel.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        topPanel.add(jSeparator1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Test Execution Analyzer");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.weightx = 1.0;
        topPanel.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        contentPan.add(topPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 3);
        contentPan.add(tabs, gridBagConstraints);

        statusBarPan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        statusBarPan.setPreferredSize(new java.awt.Dimension(0, 24));
        statusBarPan.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Execution Progress: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        statusBarPan.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        statusBarPan.add(progress, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 3, 5);
        contentPan.add(statusBarPan, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        backPan.add(contentPan, gridBagConstraints);

        getContentPane().add(backPan, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
        };
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXPanel backPan;
    private org.jdesktop.swingx.JXPanel contentPan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private org.jdesktop.swingx.painter.PinstripePainter pinstripePainter1;
    private javax.swing.JProgressBar progress;
    private javax.swing.JPanel statusBarPan;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onActivePageChanged(PageContainerModel source, Page activePage) {
        for (int i=0; i<tabs.getTabCount(); i++){
            if (tabs.getTitleAt(i).equals(activePage.getName())) {
                tabs.setSelectedIndex(i);
                return;
            }
        }
    }

    @Override
    public void onPageAdded(PageContainerModel source, Page added) {
        tabs.insertTab(added.getName(), added.getIcon(), added.getView(), null, tabs.getTabCount());
    }


}
