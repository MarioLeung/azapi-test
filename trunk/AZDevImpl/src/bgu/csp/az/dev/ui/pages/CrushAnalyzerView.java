/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CrushAnalyzerView.java
 *
 * Created on 21/08/2011, 07:33:11
 */
package bgu.csp.az.dev.ui.pages;

import bam.utils.ui.mvc.pages.PagePart;
import bam.utils.ui.rnd.GenericTreeCellRenderer;
import bgu.csp.az.dev.ui.canalyzers.ScenarioPartView.Listener;
import bgu.csp.az.dev.ui.pages.CrushAnalyzerPage.MessageData;
import bgu.csp.az.dev.ui.pages.CrushAnalyzerPage.ScenarioPartFullData;
import bgu.csp.az.dev.ui.rend.HeaderRenderer;
import javax.swing.ImageIcon;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableColumnModel;

import static bam.utils.SwingUtils.*;

/**
 *
 * @author bennyl
 */
public class CrushAnalyzerView extends javax.swing.JPanel implements CrushAnalyzerPage.Listener {

    CrushAnalyzerPage model;

    /** Creates new form CrushAnalyzerView */
    public CrushAnalyzerView() {
        initComponents();

        fullScn.addListener(new Listener() {

            @Override
            public void onMessageJumpRequested(MessageData jumpTo) {
                model.setSelectedScenarioPartById(jumpTo.id);
            }
        });

    }

    private void addPagePart(PagePart pp) {
        //anatabs.addTab(pp.getName(), pp.getView());
        //anatabs.validate();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        span = new javax.swing.JScrollPane();
        mtree = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        selectedContentPane = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        scn = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        fullScn = new bgu.csp.az.dev.ui.canalyzers.ScenarioPartView();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jSplitPane2.setBackground(new java.awt.Color(255, 255, 255));
        jSplitPane2.setBorder(null);
        jSplitPane2.setDividerLocation(200);

        jPanel1.setBackground(new java.awt.Color(245, 245, 245));
        jPanel1.setLayout(new java.awt.BorderLayout());

        span.setBackground(new java.awt.Color(255, 255, 255));
        span.setBorder(null);

        mtree.setBackground(new java.awt.Color(245, 245, 245));
        mtree.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 10, 5, 5, new java.awt.Color(245, 245, 245)));
        mtree.setRootVisible(false);
        mtree.setRowHeight(21);
        span.setViewportView(mtree);

        jPanel1.add(span, java.awt.BorderLayout.CENTER);

        jLabel1.setBackground(new java.awt.Color(215, 220, 230));
        jLabel1.setText(" Scenario Analyzing");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 0, 3, new java.awt.Color(245, 245, 245)));
        jLabel1.setMinimumSize(new java.awt.Dimension(39, 22));
        jLabel1.setOpaque(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(39, 22));
        jPanel1.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jSplitPane2.setLeftComponent(jPanel1);

        selectedContentPane.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder1 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder1.setCornerSize(8);
        dropShadowBorder1.setShowLeftShadow(true);
        dropShadowBorder1.setShowTopShadow(true);
        jSplitPane1.setBorder(dropShadowBorder1);
        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setDividerSize(2);

        jPanel5.setBackground(new java.awt.Color(245, 245, 245));
        jPanel5.setLayout(new java.awt.BorderLayout());

        scn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scn.setFillsViewportHeight(true);
        scn.setGridColor(new java.awt.Color(240, 245, 255));
        scn.setRowHeight(24);
        scn.setRowMargin(3);
        scn.setSelectionBackground(new java.awt.Color(102, 102, 102));
        scn.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scn.setShowVerticalLines(false);
        jScrollPane3.setViewportView(scn);

        jPanel5.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(jPanel5);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.BorderLayout());
        jPanel3.add(fullScn, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel3);

        selectedContentPane.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jSplitPane2.setRightComponent(selectedContentPane);

        jPanel2.add(jSplitPane2, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private bgu.csp.az.dev.ui.canalyzers.ScenarioPartView fullScn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTree mtree;
    private javax.swing.JTable scn;
    private javax.swing.JPanel selectedContentPane;
    private javax.swing.JScrollPane span;
    // End of variables declaration//GEN-END:variables

    void setModel(final CrushAnalyzerPage model) {
        this.model = model;
        scn.setModel(model.getScenarioModel2());
        mtree.setModel(model.getMenuTreeModel());
        mtree.setCellRenderer(new GenericTreeCellRenderer());

        scn.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                model.setSelectedScenarioPart(model.getScenarioModel2().itemAt(scn.getSelectedRow()));
            }
        });
        TableColumnModel cmodel = scn.getColumnModel();
        ImageIcon[] icons = new ImageIcon[]{
            resIcon("cc-clock"),
            resIcon("sender"),
            resIcon("receiver"),
            resIcon("message")
        };
        
        for (int i = 0; i < cmodel.getColumnCount(); i++) {
            final HeaderRenderer headerRenderer = new HeaderRenderer();
            headerRenderer.withIcon(icons[i]);
            cmodel.getColumn(i).setHeaderRenderer(headerRenderer);
        }

        model.addListener(this);
    }

    @Override
    public void onScenarioPartFullDataShownChanged(CrushAnalyzerPage source, ScenarioPartFullData s) {
        int row = source.getScenarioModel2().findRowWith(s.overview);
        scn.getSelectionModel().setSelectionInterval(row, row);
        fullScn.setModel(s);
    }
}
