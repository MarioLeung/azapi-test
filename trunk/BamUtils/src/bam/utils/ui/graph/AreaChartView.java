/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AreaChartView.java
 *
 * Created on 19/08/2011, 22:46:34
 */
package bam.utils.ui.graph;

import java.awt.BorderLayout;
import java.awt.Color;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.LogarithmicAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYAreaRenderer2;

/**
 *
 * @author bennyl
 */
public class AreaChartView extends javax.swing.JPanel {
    private ChartPanel chartPanel;
    private AreaChartModel model;
    private XYPlot plot;

    /** Creates new form AreaChartView */
    public AreaChartView() {
        initComponents();
        setLayout(new BorderLayout());
    }

    public void setModel(AreaChartModel model){
        this.model = model;
        removeAll();
        setLayout(new BorderLayout());
        chartPanel = new ChartPanel(createChart(model));
        add(chartPanel, BorderLayout.CENTER);
    }
    
    private JFreeChart createChart(AreaChartModel model) {
                
        final JFreeChart chart = ChartFactory.createXYAreaChart(
            model.getChartTitle(),             // chart title
            model.getxAxeTitle(),               // domain axis label
            model.getyAxeTitle(),                  // range axis label
            model.getChartModel(),                  // data
            PlotOrientation.VERTICAL, // orientation
            false,                     // include legend
            true,                     // tooltips
            false                     // urls
        );
 
        chart.setBackgroundPaint(Color.white);
        plot = chart.getXYPlot();
        plot.setForegroundAlpha(1f);
        
        plot.setBackgroundPaint(Color.WHITE);
        plot.setDomainGridlinesVisible(true);
        plot.setDomainGridlinePaint(new Color(200, 200, 200));
        plot.setRangeGridlinesVisible(true);
        plot.setRangeGridlinePaint(new Color(200, 200, 200));
        ValueAxis domainAxis = plot.getDomainAxis();
        domainAxis.setTickMarksVisible(true);
        
        setLogarithmicRangeAxis(model.isLogarithmicRangeScale());
        
        XYAreaRenderer2 renderer = new XYAreaRenderer2();
        plot.setRenderer(renderer);
        renderer.setAutoPopulateSeriesOutlinePaint(false);
        renderer.setOutline(false);
        renderer.setAutoPopulateSeriesFillPaint(true);
        renderer.setSeriesPaint(0, new Color(160,200,255));
        
        return chart;
        
    }

    private void setLogarithmicRangeAxis(boolean b){
        if (b){
            NumberAxis rangeAxis = new LogarithmicAxis("Log(" + model.getyAxeTitle() + ")");
            plot.setRangeAxis(rangeAxis);
        } else {
            NumberAxis rangeAxis = new NumberAxis(model.getyAxeTitle());
            plot.setRangeAxis(rangeAxis);
        }
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
