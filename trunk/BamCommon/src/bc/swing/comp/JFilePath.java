/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JFilePath.java
 *
 * Created on 03/07/2011, 08:57:57
 */
package bc.swing.comp;
import bc.dsl.SwingDSL;
import java.awt.Color;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import static bc.dsl.SwingDSL.*;

/**
 *
 * @author bennyl
 */
public class JFilePath extends javax.swing.JPanel implements TextualComponent{
    
    /** Creates new form JFilePath */
    public JFilePath() {
        initComponents();
        flink.setIcon(SwingDSL.resIcon("file-seek"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fpath = new bc.swing.comp.JHinteableTextField();
        flink = new org.jdesktop.swingx.JXHyperlink();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        setMinimumSize(new java.awt.Dimension(139, 23));
        setPreferredSize(new java.awt.Dimension(139, 23));
        setLayout(new java.awt.GridBagLayout());

        fpath.setBorder(null);
        fpath.setHint("write file path here");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        add(fpath, gridBagConstraints);

        flink.setText("...");
        flink.setClickedColor(new java.awt.Color(0, 51, 255));
        flink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flinkActionPerformed(evt);
            }
        });
        add(flink, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void flinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flinkActionPerformed
        choosefile();
    }//GEN-LAST:event_flinkActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXHyperlink flink;
    private bc.swing.comp.JHinteableTextField fpath;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setValueText(String text) {
        fpath.setText(text);
    }

    @Override
    public String getValueText() {
        return fpath.getText();
    }

    @Override
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled);
        fpath.setEnabled(enabled);
        flink.setEnabled(enabled);
        if (enabled) {
            setBackground(Color.WHITE);
        }else{
            setBackground(new Color(240, 240, 240));
        }
    }

    @Override
    public void addValueChangedListener(final ValueChangedListener l) {
        fpath.getDocument().addDocumentListener(new DocumentListener() {

            @Override
            public void insertUpdate(DocumentEvent e) {
                l.onChange(JFilePath.this);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                l.onChange(JFilePath.this);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                l.onChange(JFilePath.this);
            }
        });
    }
    
    
}
