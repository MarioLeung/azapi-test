/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RadioGroup.java
 *
 * Created on 13/10/2011, 13:41:14
 */
package bc.swing.pfrm.views;

import bc.swing.pfrm.BaseParamModel;
import bc.swing.pfrm.ParamView;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.util.EnumSet;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.JRadioButton;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author bennyl
 */
public class RadioGroupPV extends javax.swing.JPanel implements ParamView, ChangeListener{

    ButtonGroup group;
    BaseParamModel model;
    /** Creates new form RadioGroup */
    public RadioGroupPV() {
        initComponents();
        group = new ButtonGroup();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radios = new javax.swing.JPanel();

        setOpaque(false);
        setLayout(new java.awt.BorderLayout());

        radios.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Available Statistics", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        radios.setOpaque(false);
        radios.setLayout(new java.awt.GridBagLayout());
        add(radios, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel radios;
    // End of variables declaration//GEN-END:variables

    public void setParam(BaseParamModel param) {
        model = param;
        
        radios.setBorder(javax.swing.BorderFactory.createTitledBorder(null, param.getName(), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        
        Enum e = (Enum) param.getValue();
        for (Object ee : EnumSet.allOf(e.getClass())){
            addRadio(ee.toString());
        }
        
    }
    
    private void addRadio(String name){
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.weightx = 1;
        JRadioButton radio = new JRadioButton(name);
        radio.addChangeListener(this);
        final int[] foreground = model.getViewHints().foreground();
        radio.setForeground(new Color(foreground[0],foreground[1],foreground[2]));
        radio.setOpaque(false);
        group.add(radio);
        radios.add(radio, gbc);
    }
    
    private Enum getSelection(){
        Enumeration<AbstractButton> e = group.getElements();
        AbstractButton b = null;
        while (e.hasMoreElements()){
            b = e.nextElement();
            if (b.isSelected()) break;
        }
        
        String sname = b.getText();
        
        Enum v = (Enum) model.getValue();
        for (Object ee : EnumSet.allOf(v.getClass())){
            if (ee.toString().equals(sname)){
                return (Enum)ee;
            }
        }
        
        return null;
    }

    public void reflectChangesToParam(BaseParamModel to) {
        model.setValue(getSelection());
    }

    public void onChange(BaseParamModel source, Object newValue, Object deltaHint) {
        
    }

    public void stateChanged(ChangeEvent e) {
        model.fireSelectionChanged(getSelection());
    }
}
